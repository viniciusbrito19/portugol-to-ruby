%{
#include "common.h"
#include "parser.h"
FILE *arq;
%}
 
/* Definições */


STRING[a-z][a-z0-9]*
NOME_VARIAVEL{STRING}+
WHITESPACE [ \n\r\t]+
DIGITS [0-9]+
RECEBER [:]?
CONDICAO [<>]?

ANY_CHAR .


%option case-insensitive
 
%% /* Regras */
 
{WHITESPACE} /* Ignore */ ;
 
"ALGORITMO" { return T_ALGORITMO; }
"IMPRIMA" { return T_IMPRIMA; }
"VARIAVEIS" { return T_VARIAVEIS; }
"FIM" { return T_FIM; }
"SE" { return T_SE; }
"ENTAO" { return T_ENTAO; }
"SENAO" { return T_SENAO; }
"PARA" { return T_PARA; }
"FIM-VARIAVEIS" { return T_FIM_VARIAVEIS; }
"FIM-SE" { return T_FIM_SE; }
"INTEIRO" { return T_TIPO_INTEIRO; }
"REAL" { return T_TIPO_REAL; }
"LOGICO" { return T_TIPO_LOGICO; }
"LITERAL" { return T_TIPO_LITERAL; }
"CARACTERE" { return T_TIPO_CARACTERE; }

"," { return T_VIRGULA; }
";" { return T_PONTO_VIRGULA; }
">=" { return T_MAIOR_IGUAL; }
"<=" { return T_MENOR_IGUAL; }
"e" { return T_AND; }
"ou" { return T_OR; }
"<>" { return T_DIFERENTE; }

"+" { return T_SOMA; }
"-" { return T_SUBTRACAO; }
"=" { return T_IGUAL; }
"*" { return T_MULTIPLICACAO; }
"/" { return T_DIVISAO; }
"(" { return T_ABRE_PARENTESES; }
")" { return T_FECHA_PARENTESES; }

{NOME_VARIAVEL} { return T_NOME_VARIAVEL; }
{DIGITS} { return T_DIGIT; }
{RECEBER} { return T_RECEBER; }
{CONDICAO} { return T_CONDICAO; }
{CONDICAO_AND} { return T_AND; }

{ANY_CHAR} {
	printf("Unexpected character in input: '%c' (ASCII=%d)\n", yytext[0], yytext[0]);
}

